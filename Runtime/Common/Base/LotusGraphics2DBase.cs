//=====================================================================================================================
// Проект: LotusPlatform
// Раздел: Общий модуль 2D графики
// Подраздел: Базовая подсистема
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusGraphics2DBase.cs
*		Основные типы и структуры данных базовой подсистемы модуля 2D графики.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
using UnityEngine;
//=====================================================================================================================
namespace Lotus
{
	namespace Graphics2D
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup UnityGraphics2D Набор модулей 2D графики 
		//! Graphics2D - это набор объединяющий модули 2D графики обеспечивающие единую концепцию размещения и управления
		//! размещением элемента в двухмерном пространстве.
		//! Набор состоит из модуля общей части объединяющую общую функциональность для 2D графики посредством интерфейсов
		//! и общих типов данных, включая также концепцию игровых экранов, модулем объектной оболочки над IMGUI Unity,
		//! компонентами и комплексными элементами модуля Unity UI включая рисование базовых геометрических примитивов 
		//! и модуля размещения спрайтов.
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup Unity2DCommon ОБЩИЙ МОДУЛЬ 2D ГРАФИКИ
		//! Общий модуль 2D графики обеспечивает единую концепцию размещения и управления 2D элементом в двухмерном пространстве, 
		//! единую концепцию формирования системы пользовательского интерфейса, концепцию представления и управления геометрическими 
		//! примитивами, независимо от конкретной технологии отображения.
		//! Модуль является основой для построения визуальных систем 2D графики с учетом конкретных технологий отображения.
		//! \ingroup UnityGraphics2D
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup Unity2DCommonBase Базовая подсистема
		//! Базовая подсистема общего модуля 2D графики является основой для формирования единой концепции размещения и управления 
		//! 2D элементом в двухмерном пространстве независимо от его сущности и назначения (визуальный компонент, логический элемент) 
		//! и конкретной технологии отображения
		//! \ingroup Unity2DCommon
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Тип рамки вокруг элемента
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public enum TBorderStyle
		{
			/// <summary>
			/// Рамка отключена
			/// </summary>
			None,

			/// <summary>
			/// Внутри
			/// </summary>
			Inside,

			/// <summary>
			/// Снаружи
			/// </summary>
			Outside
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Режим изменения размеров и соотношения сторон
		/// </summary>
		/// <remarks>
		/// Применяется там где надо вручную управлять соотношением сторон
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public enum TAspectMode
		{
			/// <summary>
			/// Отключен
			/// </summary>
			/// <remarks>
			/// Размеры элемента не меняются
			/// </remarks>
			None,

			/// <summary>
			/// Прямо пропорционально
			/// </summary>
			/// <remarks>
			/// Размеры элементы меняются соответственно масштабированию ширины и высоты экраны.
			/// Это основной режим. Соотношения сторон не сохраняется
			/// </remarks>
			Proportional,

			/// <summary>
			/// Ширина контролирует высоту
			/// </summary>
			/// <remarks>
			/// Соотношения сторон сохраняется
			/// </remarks>
			WidthControlsHeight,

			/// <summary>
			/// Высота контролирует ширину
			/// </summary>
			/// <remarks>
			/// Соотношения сторон сохраняется
			/// </remarks>
			HeightControlsWidth
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Выравнивание элемента по горизонтали в родительской области
		/// </summary>
		/// <remarks>
		/// Выравнивание элемента определяет как будет расположен элемент к соответствующей стороне/части
		/// родительского элемента (или экрана)
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public enum THorizontalAlignment
		{
			/// <summary>
			/// По левому краю
			/// </summary>
			Left,

			/// <summary>
			/// По центру
			/// </summary>
			Center,

			/// <summary>
			/// По правому краю
			/// </summary>
			Right,

			/// <summary>
			/// Элемент растянут на всю ширину родительской области
			/// </summary>
			Stretch,

			/// <summary>
			/// Неизвестное значение
			/// </summary>
			Unknow
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Выравнивание элемента по вертикали элемента в родительской области
		/// </summary>
		/// <remarks>
		/// Выравнивание элемента определяет как будет расположен элемент к соответствующей стороне/части
		/// родительского элемента (или экрана)
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public enum TVerticalAlignment
		{
			/// <summary>
			/// По верхнему краю
			/// </summary>
			Top,

			/// <summary>
			/// По центру
			/// </summary>
			Middle,

			/// <summary>
			/// По нижнему краю
			/// </summary>
			Bottom,

			/// <summary>
			/// Элемент растянут на всю высоту родительской области
			/// </summary>
			Stretch,

			/// <summary>
			/// Неизвестное значение
			/// </summary>
			Unknow
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Ориентация элемента
		/// </summary>
		/// <remarks>
		/// Будет применяться для тех элементов которые имеют явно выраженную ориентацию
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public enum TOrientation
		{
			/// <summary>
			/// Горизонтальная
			/// </summary>
			Horizontal,

			/// <summary>
			/// Вертикальная
			/// </summary>
			Vertical
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================