//=====================================================================================================================
// Проект: LotusPlatform
// Раздел: Общий модуль 2D графики
// Подраздел: Базовая подсистема
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusGraphics2DBaseVisibility.cs
*		Определение типов данных и интерфейсов для определения видимости элемента.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
//=====================================================================================================================
namespace Lotus
{
	namespace Graphics2D
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup Unity2DCommonBase
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для реализации видимости элемента
		/// </summary>
		/// <remarks>
		/// Под видимостью элемента понимается набор возможностей для определения видимости элемента пользователем и фильтрами
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public interface ILotusVisibility
		{
			#region ======================================= СВОЙСТВА ==================================================
			/// <summary>
			/// Видимость элемента
			/// </summary>
			/// <remarks>
			/// Определение видимости элемента пользователем
			/// </remarks>
			Boolean IsVisible { get; set; }

			/// <summary>
			/// Битовое поле видимости элемента
			/// </summary>
			/// <remarks>
			/// Если установлены флаги значит элемент не видим, ноль элемент виден. Применяется для работы с фильтрами
			/// </remarks>
			Int32 Visibility { get; set; }

			/// <summary>
			/// Видимость непосредственно элемента
			/// </summary>
			/// <remarks>
			/// Определение видимости элемента. Зависит от фильтров и указания видимости пользователем
			/// </remarks>
			Boolean IsVisibleSelf { get; }

			/// <summary>
			/// Видимость элемента
			/// </summary>
			/// <remarks>
			/// Установка видимости независимо от текущих фильтров и видимости определенной пользователем
			/// </remarks>
			Boolean IsVisibleElement { get; set; }

			/// <summary>
			/// Прозрачность элемента
			/// </summary>
			Single Opacity { get; set; }
			#endregion

			#region ======================================= МЕТОДЫ ====================================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Установка флага видимости. Если флаг установлен то элемент невидим
			/// </summary>
			/// <remarks>
			/// Номера флагов
			/// 0 - Обозначение что отображения зависит от установки пользователя
			/// 1 - Обозначение что отображения зависит от родителя
			/// 2 - Обозначение что отображения зависит от структурной части родителя
			/// 3 - Обозначение что отображения зависит от фильтра
			/// </remarks>
			/// <param name="number">Номер флага</param>
			//---------------------------------------------------------------------------------------------------------
			void SetVisibilityFlags(Int32 number);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Очистка флага видимости
			/// </summary>
			/// <param name="number">Номер флага</param>
			//---------------------------------------------------------------------------------------------------------
			void ClearVisibilityFlags(Int32 number);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Установка видимости элемента
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			void SetVisibleElement();

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Плавное сокрытие элемента
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			void Hide();

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Плавный показ элемента
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			void Show();
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================