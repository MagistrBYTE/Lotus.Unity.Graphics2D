//=====================================================================================================================
// Проект: LotusPlatform
// Раздел: Общий модуль 2D графики
// Подраздел: Подсистема интерактивности
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusGraphics2DInteractiveBase.cs
*		Определение типов данных и интерфейсов для реализации интерактивности элемента.
*		Под интерактивностью понимается реализации режима взаимодействия и визуального реагирования(применение 
*	соответствующих визуальных эффектов) на действия пользователя или программные события.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
using System.Collections.Generic;
using System.IO;
using System.Xml;
using UnityEngine;
//=====================================================================================================================
namespace Lotus
{
	namespace Graphics2D
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup Unity2DCommonInteractive Подсистема интерактивности
		//! Под интерактивностью понимается реализации режима взаимодействия и визуального реагирования(применение 
		//! соответствующих визуальных эффектов) на действия пользователя или программные события
		//! \ingroup Unity2DCommon
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Источник инициализации процесса реагирования
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public enum TInteractiveSource
		{
			/// <summary>
			/// Посредством стандартных событий
			/// </summary>
			Event,

			/// <summary>
			/// Пользователем посредством кода
			/// </summary>
			Manual,

			/// <summary>
			/// Смешанный режим
			/// </summary>
			Mixed
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Основные типы визуального реагирования на действия пользователя
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public enum TInteractiveMode
		{
			/// <summary>
			/// Отключено
			/// </summary>
			/// <remarks>
			/// Отключено у только данного компонента или объекта
			/// </remarks>
			None,

			/// <summary>
			/// Реагирование такое же как и у кнопки
			/// </summary>
			Button,

			/// <summary>
			/// Два состояния
			/// </summary>
			Toogle,

			/// <summary>
			/// Специальный режим реагирования
			/// </summary>
			Special
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Основные состояния для реагирования на действия пользователя
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public enum TInteractiveState
		{
			/// <summary>
			/// Состояние при наведении указателя
			/// </summary>
			Hover,

			/// <summary>
			/// Состояние при нажатие
			/// </summary>
			Pressed,

			/// <summary>
			/// Состояние при выборе элемента
			/// </summary>
			Selected,

			/// <summary>
			/// Состояние при перемещение элемента
			/// </summary>
			Dragged,

			/// <summary>
			/// Состояние при возможности принять элемент
			/// </summary>
			Accept,

			/// <summary>
			/// Состояние при недоступности элемента
			/// </summary>
			Disabled
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для реализации режима взаимодействия и визуального реагирования на действия пользователя
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ILotusInteractive
		{
			#region ======================================= СВОЙСТВА ==================================================
			/// <summary>
			/// Источник инициализации процесса реагирования
			/// </summary>
			TInteractiveSource InteractiveSource { get; set; }

			/// <summary>
			/// Тип визуального реагирования на действия пользователя
			/// </summary>
			TInteractiveMode InteractiveMode { get; set; }

			/// <summary>
			/// Статус визуальной активации элемента
			/// </summary>
			Boolean IsVisualActive { get; set; }

			/// <summary>
			/// Список визуальных эффектов
			/// </summary>
			IList<ILotusVisualEffect> IEffects { get; } 
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================