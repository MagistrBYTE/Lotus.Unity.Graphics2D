//=====================================================================================================================
// Проект: LotusPlatform
// Раздел: Общий модуль 2D графики
// Подраздел: Подсистема игровых экранов
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusScreenGameDispatcherLogic.cs
*		Диспетчер основной логики взаимодействия игровых состояний.
*		Реализация диспетчера основной логики взаимодействия игровых экранов интерфейса пользователя по управлению
*	игровыми экранами и игровыми состояниями.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
//=====================================================================================================================
namespace Lotus
{
	namespace Graphics2D
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup Unity2DCommonScreenGame
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Диспетчер основной логики взаимодействия игровых состояний
		/// </summary>
		/// <remarks>
		/// Реализация диспетчера основной логики взаимодействия игровых экранов интерфейса пользователя по управлению 
		/// игровыми экранами и игровыми состояниями
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		[Serializable]
		[AddComponentMenu("Lotus/Graphics2D/Screen Game/Screen Game Logic")]
		public class LotusScreenGameDispatcherLogic : LotusScreenGameDispatcher
		{
			#region ======================================= МЕТОДЫ СОЗДАНИЯ ===========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Создание диспетчера основной логики взаимодействия игровых состояний
			/// </summary>
			/// <returns>Диспетчер основной логики взаимодействия игровых состояний</returns>
			//---------------------------------------------------------------------------------------------------------
			public static LotusScreenGameDispatcherLogic CreateScreenGameDispatcherLogic()
			{
				// 1) Создание объекта
				GameObject go = new GameObject("ScreenGameDispatcherLogic(");
				go.layer = XLayer.UI_ID;
				LotusScreenGameDispatcherLogic screen_game_dispatcher = go.AddComponent<LotusScreenGameDispatcherLogic>();

				return screen_game_dispatcher;
			}
			#endregion

			#region ======================================= ДАННЫЕ ====================================================
			// Игровой статус
			[NonSerialized]
			internal Boolean mIsGame;
			[NonSerialized]
			internal Boolean mIsPause;
			[NonSerialized]
			internal Boolean mIsMenu = true;
			[NonSerialized]
			internal Action mOnPause;
			[NonSerialized]
			internal Action mOnResume;
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			//
			// ОСНОВНЫЕ ПАРАМЕТРЫ
			//
			#endregion

			#region ======================================= СОБЫТИЯ UNITY =============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Инициализация элемента при присоединении его к объекту(в режиме редактора)
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			protected override void ResetElement()
			{
				InitDispatcherLogic();
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор элемента
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			protected override void ConstructorElement()
			{
				InitDispatcherLogic();
				InitScreen();
				InitBinding();
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Обновление скрипта каждый кадр
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public void Update()
			{
				if(mIsPause == false && mIsGame && Input.GetKeyDown(KeyCode.Escape))
				{
					OnPause();
					return;
				}

				if (mIsPause && mIsGame && Input.GetKeyDown(KeyCode.Escape))
				{
					OnPauseResume();
				}


#if UNITY_EDITOR
				if (Input.GetKeyDown(KeyCode.Backspace))
				{
					PrevoisScreen();
				}
#endif
			}
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Первичная безопасная инициализация данных
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public void InitDispatcherLogic()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Связывание данных
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public void InitBinding()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Выход из игры
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnExit()
			{
				Application.Quit();

#if UNITY_EDITOR
				UnityEditor.EditorApplication.isPlaying = false;
#endif
			}
			#endregion

			#region ======================================= СТАРТОВЫЙ ЭКРАН ===========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход на игровой экран опций
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnStartOption()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход на игровой экран магазина
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnStartShop()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход на игровой экран авторов
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnStartAuthors()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход на игровой экран выхода
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnStartExit()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Инициализация социальной сети - GooglePlus
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnSocialGooglePlus()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Инициализация социальной сети - Facebook
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnSocialFacebook()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Инициализация социальной сети - Vkontakte
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnSocialVkontakte()
			{

			}
			#endregion

			#region ======================================= ЭКРАН ОПЦИЙ ===============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Включение/отключение звука
			/// </summary>
			/// <param name="status">Статус звука</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnSoundEnabled(Boolean status)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Включение/отключение музыки
			/// </summary>
			/// <param name="status">Статус музики</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnMusicEnabled(Boolean status)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Смена языка
			/// </summary>
			/// <param name="index">Индекс выбора</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnChangedLang(Int32 index)
			{
				if (LotusLocalizationDispatcher.Instance.CurrentLanguageIndex != index)
				{
					LotusLocalizationDispatcher.ChangedLanguage(index);
				}
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Смена графических настроек
			/// </summary>
			/// <param name="index">Индекс выбора</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnChangedGraphics(Int32 index)
			{
				QualitySettings.SetQualityLevel(index);
			}
			#endregion

			#region ======================================= ЭКРАН ПАУЗЫ ===============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Пауза
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnPause()
			{
				//AddScreen("Pause");
				//mIsPause = true;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Продолжение игры после паузы
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnPauseResume()
			{
				//RemoveScreenAndLastNext();
				//mIsPause = false;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход на игровой экран опций с паузы
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnPauseOption()
			{
				//AddScreen("Option");

				//LotusUIDispatcher.IsPause = false;
				//LotusUIDispatcher.IsGame = false;
				//LotusUIDispatcher.IsMenu = true;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход в стартовое меню с паузы
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnPauseStartMenu()
			{
				ClearNavigation();
				SwapForwardScreen("Start");

				mIsPause = false;
				mIsGame = false;
				mIsMenu = true;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход на экран выбора уровня с паузы
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnPauseSelectLevel()
			{
				//LotusUIDispatcher.Instance.RemoveNavigation("ArcadeScreen");
				//LotusUIDispatcher.Instance.SwapForwardUIScreen("ArcadeScreen");

				//LotusUIDispatcher.IsPause = false;
				//LotusUIDispatcher.IsGame = false;
				//LotusUIDispatcher.IsMenu = true;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Выход из игры с паузы
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnPauseExit()
			{
				OnExit();
			}
			#endregion

			#region ======================================= ЭКРАН УСПЕХА УРОВНЯ =======================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Продолжение следующего уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelCompletedNextLevel()
			{
				//LotusUIDispatcher.IsPause = false;
				//LotusUIDispatcher.IsGame = true;
				//LotusUIDispatcher.IsMenu = false;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход на экран опций с экрана успешного завершения уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelCompletedOption()
			{
				//OnPauseStartMenu(sender);
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход в стартовое меню с экрана успешного завершения уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelCompletedStartMenu()
			{
				OnPauseStartMenu();
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход на экран выбора уровня с экран успешного завершения уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelCompletedSelectLevel()
			{
				OnPauseSelectLevel();
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Выход из игры с экрана успешного завершения уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelCompletedExit()
			{
				OnExit();
			}
			#endregion

			#region ======================================= ЭКРАН НЕУСПЕХА УРОВНЯ =====================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Перезапуск уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelFailedRestartLevel()
			{
				//LotusUIDispatcher.IsPause = false;
				//LotusUIDispatcher.IsGame = true;
				//LotusUIDispatcher.IsMenu = false;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход в стартовое меню с экрана успешного завершения уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelFailedOption()
			{
				//OnPauseStartMenu(sender);
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход в стартовое меню с экрана успешного завершения уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelFailedStartMenu()
			{
				OnPauseStartMenu();
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Переход на экран выбора уровня с экран успешного завершения уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelFailedSelectLevel()
			{
				OnPauseSelectLevel();
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Выход из игры с экрана успешного завершения уровня
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void OnLevelFailedExit()
			{
				OnExit();
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================